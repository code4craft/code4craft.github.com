---
layout: post
title: "创业日志（四）——慢下来的技术团队"
date: 2016-11-07 07:25
comments: true
categories: 
---

![camel](/images/posts/camel.jpg)

之前去参加一个技术大会，中间碰到一个前同事，跟他们聊起公司规模，他们说每个业务线都有十十几号人，我说我们团队只有几个人，他表示非常惊讶，几个人能做出这么多东西？然后他领导就很忧郁的说，“我也挺纳闷，我们当初也是这么几个人，怎么感觉事情还是那么些事情，突然就需要这么多人了？”

前几天也跟老板聊起来，感觉产品研发变慢了，随便做个需求就要排期。我粗略一想，相比之前两三个月就把各平台都上线，现在确实没有什么印象深刻的产品变化。可是我们甚至连人都还是那几个人，这里面好像有哪里出了问题。

<!--more-->

想到几个原因，列举一下。最终也没得到什么结论，记得去年定的目标是对软件性能做量化分析，给自己定个五年目标，对软件工作量和负责度做定量分析。

### 变懒的开发人员？

看到这个问题，第一个想法是投入度。毕竟初创人员从0到1的时候是投入度最高的，两三天撸出一个功能，没事回家了还要加班把代码写完。到了后面常规功能迭代，则是趋向于按部就班，细水长流嘛。

有没有办法考察这个问题？我第一个想到了代码commit数。一般来说，代码commit数根据人的习惯不同差异会比较大，不能作为工作量参考标准，但是对于同一个人来说，提交频率、代码质量基本不会有太多变化，还是能反应开发的工作量多少的。

我从gitlab上拉了我们主仓库的活跃记录，结果发现：代码提交量并没有下降，并且随着后面加入了一个新同学，反而是上升了。看来细水长流还是打鸡血不太重要，只要保证大家每天能写代码的时间是足够的，生产量其实都没有多少差别。

![piaoniu-commit](/images/posts/piaoniu-commit.png)

### 产品的二八法则

一般来说，我们会先用比较低的成本做出最小可用的版本，一般都会比较简陋，技术遗留问题也很多。后面增加的功能，可能效果并不突出，但是占用的开发量未必会小。

### 规模的烦恼

《人月神话》中有个观点，使用软件的人越多，发现的bug越多。最近几天专门记录了一下自己时间的分配，发现一半时间都是在处理问题、解决bug中。

偷懒，后面不写了。